<?php
/**
 * ErrorCode
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Canva Connect API
 *
 * API for building integrations with Canva via a REST api
 *
 * The version of the OpenAPI document: latest
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ErrorCode Class Doc Comment
 *
 * @category Class
 * @description A short string indicating what failed. This field can be used to handle errors programmatically.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ErrorCode
{
    /**
     * Possible values of this enum
     */
    public const INTERNAL_ERROR = 'internal_error';

    public const INVALID_FIELD = 'invalid_field';

    public const INVALID_HEADER_VALUE = 'invalid_header_value';

    public const PERMISSION_DENIED = 'permission_denied';

    public const TOO_MANY_REQUESTS = 'too_many_requests';

    public const NOT_FOUND = 'not_found';

    public const BAD_REQUEST_BODY = 'bad_request_body';

    public const BAD_HTTP_METHOD = 'bad_http_method';

    public const BAD_REQUEST_PARAMS = 'bad_request_params';

    public const BAD_QUERY_PARAMS = 'bad_query_params';

    public const ENDPOINT_NOT_FOUND = 'endpoint_not_found';

    public const UNSUPPORTED_VERSION = 'unsupported_version';

    public const INVALID_ACCESS_TOKEN = 'invalid_access_token';

    public const REVOKED_ACCESS_TOKEN = 'revoked_access_token';

    public const MISSING_FIELD = 'missing_field';

    public const MISSING_SCOPE = 'missing_scope';

    public const INVALID_GRANT = 'invalid_grant';

    public const INVALID_REQUEST = 'invalid_request';

    public const INVALID_CLIENT = 'invalid_client';

    public const UNAUTHORIZED_CLIENT = 'unauthorized_client';

    public const UNSUPPORTED_GRANT_TYPE = 'unsupported_grant_type';

    public const INVALID_SCOPE = 'invalid_scope';

    public const INVALID_BASIC_HEADER = 'invalid_basic_header';

    public const INVALID_FILE_FORMAT = 'invalid_file_format';

    public const QUOTA_EXCEEDED = 'quota_exceeded';

    public const UNSUPPORTED_CONTENT_TYPE = 'unsupported_content_type';

    public const REQUEST_TOO_LARGE = 'request_too_large';

    public const FOLDER_NOT_FOUND = 'folder_not_found';

    public const ASSET_NOT_FOUND = 'asset_not_found';

    public const MAX_LIMIT_REACHED = 'max_limit_reached';

    public const PERMISSION_NOT_FOUND = 'permission_not_found';

    public const PERMISSION_EXISTS = 'permission_exists';

    public const UNAUTHORIZED_USER = 'unauthorized_user';

    public const USER_NOT_FOUND = 'user_not_found';

    public const GROUP_NOT_FOUND = 'group_not_found';

    public const APP_NOT_FOUND = 'app_not_found';

    public const CONTENT_NOT_FOUND = 'content_not_found';

    public const DOCTYPE_NOT_FOUND = 'doctype_not_found';

    public const DESIGN_NOT_FOUND = 'design_not_found';

    public const DESIGN_TYPE_NOT_FOUND = 'design_type_not_found';

    public const TEAM_NOT_FOUND = 'team_not_found';

    public const COMMENT_NOT_FOUND = 'comment_not_found';

    public const TOO_MANY_COMMENTS = 'too_many_comments';

    public const TOO_MANY_REPLIES = 'too_many_replies';

    public const MESSAGE_TOO_LONG = 'message_too_long';

    public const DESIGN_NOT_FILLABLE = 'design_not_fillable';

    public const AUTOFILL_DATA_INVALID = 'autofill_data_invalid';

    public const FEATURE_NOT_AVAILABLE = 'feature_not_available';

    public const LICENSE_REQUIRED = 'license_required';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::INTERNAL_ERROR,
            self::INVALID_FIELD,
            self::INVALID_HEADER_VALUE,
            self::PERMISSION_DENIED,
            self::TOO_MANY_REQUESTS,
            self::NOT_FOUND,
            self::BAD_REQUEST_BODY,
            self::BAD_HTTP_METHOD,
            self::BAD_REQUEST_PARAMS,
            self::BAD_QUERY_PARAMS,
            self::ENDPOINT_NOT_FOUND,
            self::UNSUPPORTED_VERSION,
            self::INVALID_ACCESS_TOKEN,
            self::REVOKED_ACCESS_TOKEN,
            self::MISSING_FIELD,
            self::MISSING_SCOPE,
            self::INVALID_GRANT,
            self::INVALID_REQUEST,
            self::INVALID_CLIENT,
            self::UNAUTHORIZED_CLIENT,
            self::UNSUPPORTED_GRANT_TYPE,
            self::INVALID_SCOPE,
            self::INVALID_BASIC_HEADER,
            self::INVALID_FILE_FORMAT,
            self::QUOTA_EXCEEDED,
            self::UNSUPPORTED_CONTENT_TYPE,
            self::REQUEST_TOO_LARGE,
            self::FOLDER_NOT_FOUND,
            self::ASSET_NOT_FOUND,
            self::MAX_LIMIT_REACHED,
            self::PERMISSION_NOT_FOUND,
            self::PERMISSION_EXISTS,
            self::UNAUTHORIZED_USER,
            self::USER_NOT_FOUND,
            self::GROUP_NOT_FOUND,
            self::APP_NOT_FOUND,
            self::CONTENT_NOT_FOUND,
            self::DOCTYPE_NOT_FOUND,
            self::DESIGN_NOT_FOUND,
            self::DESIGN_TYPE_NOT_FOUND,
            self::TEAM_NOT_FOUND,
            self::COMMENT_NOT_FOUND,
            self::TOO_MANY_COMMENTS,
            self::TOO_MANY_REPLIES,
            self::MESSAGE_TOO_LONG,
            self::DESIGN_NOT_FILLABLE,
            self::AUTOFILL_DATA_INVALID,
            self::FEATURE_NOT_AVAILABLE,
            self::LICENSE_REQUIRED
        ];
    }
}


